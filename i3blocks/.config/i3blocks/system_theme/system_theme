#!/usr/bin/env python3
# Copyright (C) 2025 Jo√£o Freitas <joaj.freitas@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import json
import subprocess

def button_clicked():
    button = "BLOCK_BUTTON" in os.environ and os.environ["BLOCK_BUTTON"]
    return button == "1"

def light_theme_desc():
    return {"full_text": "<span font='Font Awesome 5 Free Solid' color='#A4B98E'>\u25cf</span>"}

def dark_theme_desc():
    return {"full_text": "<span font='Font Awesome 5 Free Solid' color='#A4B98E'>\u25cb</span>"}

def set_dark_theme():
    subprocess.Popen(["gsettings", "set", "org.gnome.desktop.interface", "color-scheme", "prefer-dark"], start_new_session=True)
    return dark_theme_desc()

def set_light_theme():
    subprocess.Popen(["gsettings", "set", "org.gnome.desktop.interface", "color-scheme", "prefer-light"], start_new_session=True)
    return light_theme_desc()

if button_clicked():
    r = subprocess.run(["gsettings", "get", "org.gnome.desktop.interface", "color-scheme"], capture_output=True)
    theme = r.stdout.decode("utf-8").strip().strip("'")
    if theme == "prefer-light":
        ret = set_dark_theme()
    else:
        ret = set_light_theme()
else:
    r = subprocess.run(["gsettings", "get", "org.gnome.desktop.interface", "color-scheme"], capture_output=True)
    theme = r.stdout.decode("utf-8").strip().strip("'")
    if theme == "prefer-light":
        ret = light_theme_desc()
    else:
        ret = dark_theme_desc()

print(json.dumps(ret))
