
<link rel="stylesheet" href="style.css">
<link rel="stylesheet" href="highlight.css">
<h1>LSP config</h1>
<div class="codehilite"><pre><span></span><code>lua &lt;&lt; EOF
require&#39;lspconfig&#39;.rust_analyzer.setup{}
EOF
</code></pre></div>

<div class="codehilite"><pre><span></span><code><span class="n">lua</span><span class="w"> </span><span class="o">&lt;&lt;</span><span class="w"> </span><span class="n">EOF</span><span class="w"></span>
<span class="k">local</span><span class="w"> </span><span class="n">nvim_lsp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">require</span><span class="p">(</span><span class="s1">&#39;lspconfig&#39;</span><span class="p">)</span><span class="w"></span>

<span class="o">--</span><span class="w"> </span><span class="k">Use</span><span class="w"> </span><span class="n">an</span><span class="w"> </span><span class="n">on_attach</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="k">only</span><span class="w"> </span><span class="k">map</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">following</span><span class="w"> </span><span class="n">keys</span><span class="w"> </span>
<span class="o">--</span><span class="w"> </span><span class="k">after</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="k">language</span><span class="w"> </span><span class="n">server</span><span class="w"> </span><span class="n">attaches</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="k">current</span><span class="w"> </span><span class="n">buffer</span><span class="w"></span>
<span class="k">local</span><span class="w"> </span><span class="n">on_attach</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">bufnr</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="k">local</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="n">buf_set_keymap</span><span class="p">(...)</span><span class="w"> </span><span class="n">vim</span><span class="p">.</span><span class="n">api</span><span class="p">.</span><span class="n">nvim_buf_set_keymap</span><span class="p">(</span><span class="n">bufnr</span><span class="p">,</span><span class="w"> </span><span class="p">...)</span><span class="w"> </span><span class="k">end</span><span class="w"></span>
<span class="w">  </span><span class="k">local</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="n">buf_set_option</span><span class="p">(...)</span><span class="w"> </span><span class="n">vim</span><span class="p">.</span><span class="n">api</span><span class="p">.</span><span class="n">nvim_buf_set_option</span><span class="p">(</span><span class="n">bufnr</span><span class="p">,</span><span class="w"> </span><span class="p">...)</span><span class="w"> </span><span class="k">end</span><span class="w"></span>

<span class="w">  </span><span class="o">--</span><span class="n">Enable</span><span class="w"> </span><span class="k">completion</span><span class="w"> </span><span class="n">triggered</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="o">&lt;</span><span class="n">c</span><span class="o">-</span><span class="n">x</span><span class="o">&gt;&lt;</span><span class="n">c</span><span class="o">-</span><span class="n">o</span><span class="o">&gt;</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_option</span><span class="p">(</span><span class="s1">&#39;omnifunc&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;v:lua.vim.lsp.omnifunc&#39;</span><span class="p">)</span><span class="w"></span>

<span class="w">  </span><span class="o">--</span><span class="w"> </span><span class="n">Mappings</span><span class="p">.</span><span class="w"></span>
<span class="w">  </span><span class="k">local</span><span class="w"> </span><span class="n">opts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">noremap</span><span class="o">=</span><span class="k">true</span><span class="p">,</span><span class="w"> </span><span class="n">silent</span><span class="o">=</span><span class="k">true</span><span class="w"> </span><span class="err">}</span><span class="w"></span>

<span class="w">  </span><span class="o">--</span><span class="w"> </span><span class="n">See</span><span class="w"> </span><span class="err">`:</span><span class="n">help</span><span class="w"> </span><span class="n">vim</span><span class="p">.</span><span class="n">lsp</span><span class="p">.</span><span class="o">*</span><span class="err">`</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">documentation</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="ow">any</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">below</span><span class="w"> </span><span class="n">functions</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;gD&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;Cmd&gt;lua vim.lsp.buf.declaration()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;gd&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;Cmd&gt;lua vim.lsp.buf.definition()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;K&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;Cmd&gt;lua vim.lsp.buf.hover()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;gi&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.implementation()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;C-k&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.signature_help()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;wa&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.add_workspace_folder()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;wr&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.remove_workspace_folder()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;wl&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua print(vim.inspect(vim.lsp.buf.list_workspace_folders()))&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;D&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.type_definition()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;rn&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.rename()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;ca&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.code_action()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;gr&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.buf.references()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;e&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.diagnostic.show_line_diagnostics()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;[d&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.diagnostic.goto_prev()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;]d&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.diagnostic.goto_next()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="s1">&#39;n&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;space&gt;q&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;&lt;cmd&gt;lua vim.lsp.diagnostic.set_loclist()&lt;CR&gt;&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>
<span class="w">  </span><span class="n">buf_set_keymap</span><span class="p">(</span><span class="ss">&quot;n&quot;</span><span class="p">,</span><span class="w"> </span><span class="ss">&quot;&lt;space&gt;f&quot;</span><span class="p">,</span><span class="w"> </span><span class="ss">&quot;&lt;cmd&gt;lua vim.lsp.buf.formatting()&lt;CR&gt;&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">)</span><span class="w"></span>

<span class="k">end</span><span class="w"></span>

<span class="o">--</span><span class="w"> </span><span class="k">Use</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">loop</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">conveniently</span><span class="w"> </span><span class="k">call</span><span class="w"> </span><span class="s1">&#39;setup&#39;</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">multiple</span><span class="w"> </span><span class="n">servers</span><span class="w"> </span><span class="ow">and</span><span class="w"></span>
<span class="o">--</span><span class="w"> </span><span class="k">map</span><span class="w"> </span><span class="n">buffer</span><span class="w"> </span><span class="k">local</span><span class="w"> </span><span class="n">keybindings</span><span class="w"> </span><span class="k">when</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="k">language</span><span class="w"> </span><span class="n">server</span><span class="w"> </span><span class="n">attaches</span><span class="w"></span>
<span class="k">local</span><span class="w"> </span><span class="n">servers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="ss">&quot;pyright&quot;</span><span class="p">,</span><span class="w"> </span><span class="ss">&quot;rust_analyzer&quot;</span><span class="p">,</span><span class="w"> </span><span class="ss">&quot;tsserver&quot;</span><span class="w"> </span><span class="err">}</span><span class="w"></span>
<span class="k">for</span><span class="w"> </span><span class="n">_</span><span class="p">,</span><span class="w"> </span><span class="n">lsp</span><span class="w"> </span><span class="ow">in</span><span class="w"> </span><span class="n">ipairs</span><span class="p">(</span><span class="n">servers</span><span class="p">)</span><span class="w"> </span><span class="n">do</span><span class="w"></span>
<span class="w">  </span><span class="n">nvim_lsp</span><span class="o">[</span><span class="n">lsp</span><span class="o">]</span><span class="p">.</span><span class="n">setup</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">on_attach</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">on_attach</span><span class="w"> </span><span class="err">}</span><span class="w"></span>
<span class="k">end</span><span class="w"></span>
<span class="n">EOF</span><span class="w"></span>
</code></pre></div>